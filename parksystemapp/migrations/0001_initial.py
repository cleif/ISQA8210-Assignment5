# Generated by Django 2.2 on 2020-10-24 06:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('park_name', models.CharField(default='', max_length=255)),
                ('park_addr', models.CharField(default='', max_length=255)),
                ('park_image', models.TextField(default='')),
                ('park_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Park',
                'verbose_name_plural': 'Park',
            },
        ),
        migrations.CreateModel(
            name='ParkProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('property_name', models.CharField(default='', max_length=255)),
                ('property_description', models.TextField(default='')),
                ('property_guest_capacity', models.IntegerField(blank=True, null=True)),
                ('property_location', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('property_price', models.IntegerField(blank=True, null=True)),
                ('property_image', models.TextField(default='')),
                ('property_slot', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('park_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prop.parkname+', to='parksystemapp.Park')),
            ],
            options={
                'verbose_name': 'ParkProperty',
                'verbose_name_plural': 'ParkProperty',
            },
        ),
        migrations.CreateModel(
            name='ParkPropertyAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('property_availability_date', models.DateField()),
                ('property_availability_starttime', models.TimeField()),
                ('property_availability_endtime', models.TimeField()),
                ('property_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ava.propertyname+', to='parksystemapp.ParkProperty')),
            ],
            options={
                'verbose_name': 'ParkPropertyAvailability',
                'verbose_name_plural': 'ParkPropertyAvailability',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('res_eventdate', models.DateTimeField()),
                ('res_slot', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('res_size', models.IntegerField(blank=True, null=True)),
                ('res_status', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('property_availability_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='res.propavailbilityid+', to='parksystemapp.ParkPropertyAvailability')),
                ('property_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='res.propertyname+', to='parksystemapp.ParkProperty')),
                ('renter_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservation',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('transaction_amount', models.IntegerField(default='')),
                ('transaction_date', models.DateTimeField()),
                ('transaction_type', models.CharField(blank=True, choices=[('Credit Card', 'Credit Card'), ('Android Pay', 'Android Pay'), ('PayPal', 'PayPal'), ('ApplePay', 'ApplePay')], default='', max_length=255, null=True)),
                ('transaction_notes', models.TextField(default='')),
                ('res_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trans.resid+', to='parksystemapp.Reservation')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transaction',
            },
        ),
        migrations.CreateModel(
            name='PropertyStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('property_report_time', models.DateTimeField()),
                ('property_status_description', models.TextField(default='')),
                ('property_expenses', models.IntegerField(blank=True, null=True)),
                ('property_status_notes', models.TextField(default='')),
                ('maint_staff_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('property_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status.propertyname+', to='parksystemapp.ParkProperty')),
                ('reservation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status.resid+', to='parksystemapp.Reservation')),
            ],
            options={
                'verbose_name': 'PropertyStatus',
                'verbose_name_plural': 'PropertyStatus',
            },
        ),
    ]
